
maybe instead of true metadata I should just have full text search?
can decide if maybe want #key as convention or official thingy for true metadata, hm
also means I need some kind of text repository with like
    (location, text)
pairs where i can search all text for #key and report all locations containing, and also replace a text by location in the db
and location is a (zone,x,y) triple I guess
and I guess every time i edit a note and insert it, it should parse it then for all the keys and keep a table of <key,location[]>
hm, and then i guess basically need a ui which allows
 - selecting any key and highlighting all map locations (and zones? hm) with that key (show count? list them? clickable list takes you there?)
 - or not currently doing any highlighting
and maybe optionally full text search for other stuff, though that's a stretch goal
key list could maybe always appear somewhere, tall list with slider bar?
conventionally perhaps I use #greenkey and #Zgreenkey to mean 'needed' and 'done' (unlocked) maybe to track things changing over time?



seems like 'focused on room x,y but all known map visible' zoom level would be useful as output for clicking a search destination
I can imagine a key toggle that is 'all visible' versus either 'current zoom' or '5x5' or something, and thing in status area saying FULL or 1x1/3x3/5x5/7x7/etc

hm, and sometimes an in-game minimap or hint tells you something is 4 north of X, but you might not been there yet, but want to leave note, and ideally would also
have screenshot, so, uh, need like a default ? screenshot to display for any non-null entries that lack screenshots, hm
 - DONE, cornflower blue background rather than typical grays


and I'm already forgetting keys, need cheatsheet
 2468   move
 0      screenshot
 +-     paste cut
 *      change projection (full screen, map area, metadata area)
 /      edit note
 79     change zoom
num 13 only things left really...
but also mousing for infrequent stuff (e.g. key search/highlight) is fine
 



test note C&P

+ zones

root directory for games (debug v release, change games, catalogue? app data folders?)


Leaf's odysssey also has
 - left HUD
 - screen names like elephantasy
so I probably want to 
 - capture whole screenshot
 - have a projection mechanism to toggle whole versus just map area
 - have a way to capture metadata from a projection and display it too (e.g. grid of screen names, or screen name in summary area)
and I'll be playing/capturing 2x or 3x resolution, so want to downscale screenshots/images like Elephantasy to save disk/processing/etc

so
 + hardcode how to get native 1x screenshot bmps
 + hardcode (for now) the various projections I want (full game, play area, screen name)
 + make VIEWX be 630 (multiple of 1/3/5/7/9) and app width be like 630+20+20
 + make VIEWY be dynamic, adjusting to aspect ratio of current projection, so we always fit e.g. a 5x5 map plus some edges at a zoom level, but the height varies with aspect ratio
 + have a way to select what projection to see now (press NUM-* toggles among three)
 + always show curx/cury meta+full screenshot in the bottom metadata area 


for YT, do I want a minimap projection thingy?
I guess separate OBS scene layout I can toggle is simpler, occasionally do it and break flow


something making mode clearer (screenshot vs note), user errors
 + maybe NUM_DIVIDE can be shortcut to edit note, or something, then not toggling dropdown so much/fiddly
 - e.g. get rid of the 'mode', always screenshot mode, with other interactions to do other-editing, e.g. dropdown meta03 lets you edit that but then return to screenshot


time travel/review

metadata

metadata map-viz

see-whole-map (auto zoom, cursor without centering)

map connectivity? (can you go N-S here)






(*

-------------------

whole map is like 100x100 and starts you at 50,50

data is big JSON array of bools? if anything exist here

each map tile has its own file on disk of own JSON, something like
 - screenshots: [ TS1, TS2, ... TSN ]
 - note: (text note)
 - meta: [ metas ]

where metas are like a list of things of form
    Meta01: [ {TS1,true}, {TS2,false} ]

And there's some master list of names of the meta categories, e.g.

    Meta01: "Yellow Key"
    Meta02: "Need double jump"

and then some way to add categories.

And then UI is like, defaults to Num5 takes a screenshot, but you can change modes:
    Screenshot
    Text Note
    Meta01Name
    Meta02Name
and like the tiles with any data in that category get a highlight, and pressing Num5 will like
    take screenshot
    give place to edit the text note
    toggle the meta flag
and 'cut/delete' would like erase the last meta entry, so if you accidentally mark a Yellow Key where it's not you can erase it

------------------

And since everything is timestamped you can kinda 'go back in time' or see map evolve over time
*)



// wpf, imagine a big Grid of all the screenshot Images
// can zoom/scroll it to desired on-screen portion
// then can draw gridlines and cursor highlight at a certain thickness atop all that in window pixels

(*
interactions
move cursor with Num2468 
or with click

dropdown change zone (save prompt)
button rename current zone
add new zone (in dropdown?)

dropdown change type (screenshot/note/metaNN)   // better name for 'type' - mode?
if meta
    button rename current meta
    add new meta (in dropdown?)

Num5?Num0?NumEnter? 'add' a thingy (edits existing note)
Num- delete/cut a thingy (need some kind of clipboard viz, and i guess a clipboard per 'type')
    does cutting a screenshot mean taking the whole maptile and all its metadata with it? no
Num+ paste

Num79 zoom in/out (see 1x1/3x3/5x5/... plus a little edges)

Num/ toggle full v zoom, if full, then fit all non-empty into screen area?

state: cursor location, zoom level, isFull

*)
